{"version":3,"sources":["components/SearchBar.js","components/BoxMain.js","components/BoxDown.js","components/LeftContainer.js","components/BoxRight.js","components/RightContainer.js","hooks/useBreakPoints.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","getWeather","screenSize","useState","text","setText","inputClass","className","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","onClick","BoxMain","name","temp","description","id","sunrise","sunset","timezone","img","timeDiff","parseInt","iconClass","smallMainTextClass","largeMainTextClass","test","moment","utc","add","isBetween","unix","src","alt","Math","round","BoxDown","feels","wind","humidity","sunriseTime","format","sunsetTime","boxDownLeftClass","LeftContainer","weather","leftContainerClass","main","sys","feels_like","speed","BoxRight","key","date","minTemp","maxTemp","day","dateFormed","smallForecastClass","RightContainer","forecast","today","todayPlusOne","console","log","todayPlusTwo","todayPlusThree","todayPlusFour","todayPlusFive","regexToday","RegExp","regexTodayPlusOne","regexTodayPlusTwo","regexTodayPlusThree","regexTodayPlusFour","regexTodayPlusFive","rightContainerClass","f1","f2","f3","f4","f5","list","map","dt_txt","push","min","max","getDeviceConfig","width","useBreakPoint","window","innerWidth","breakPoint","setBreakPoint","useEffect","calcInnerWidth","throttle","addEventListener","removeEventListener","App","setWeather","setForecast","searchContainerClass","a","ApiKey","process","urlCurrent","urlForecast","axios","get","then","response","data","catch","error","request","alert","cod","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d23810e6.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport '../styles/LeftContainer.css'\r\n\r\nconst SearchBar = ({ getWeather, screenSize }) => {\r\n    const [text, setText] = useState('');\r\n    const inputClass = `inputStyle${screenSize}`;\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <form className='formStyle' onSubmit={onSubmit}>\r\n            <input\r\n                className={inputClass}\r\n                type='text'\r\n                placeholder='Search city...'\r\n                onChange={e => setText(e.target.value)}\r\n            />\r\n            <button className='buttonStyle' onClick={() => getWeather(text)}>Search</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SearchBar","import { findByLabelText } from \"@testing-library/dom\";\r\nimport moment from \"moment\";\r\nimport \"../styles/LeftContainer.css\"\r\n\r\nconst BoxMain = ({ name, temp, description, id, sunrise, sunset, timezone, screenSize }) => {\r\n    let img = \"\";\r\n    const timeDiff = parseInt(timezone / 3600)\r\n    const iconClass = `iconStyle${screenSize}`;\r\n    const smallMainTextClass = `smallMainTextStyle${screenSize}`;\r\n    const largeMainTextClass = `largeMainTextStyle${screenSize}`;\r\n\r\n    if (/801/.test(id)) {\r\n        (moment((moment.utc())).add((parseInt(timeDiff / 3600)), 'hours').isBetween(moment.unix(sunrise), moment.unix(sunset))) ?\r\n            (img = \"few_clouds_d.png\") : (img = \"few_clouds_n.png\")\r\n    }\r\n    if ((/802/.test(id)) || (/803/.test(id)) || (/804/.test(id))) {\r\n        img = \"clouds.png\"\r\n    }\r\n    if (/800/.test(id)) {\r\n        (moment((moment.utc())).add((parseInt(timeDiff / 3600)), 'hours').isBetween(moment.unix(sunrise), moment.unix(sunset))) ?\r\n            (img = \"clear_d.png\") : (img = \"clear_n.png\")\r\n\r\n    }\r\n    if (/^7/.test(id)) {\r\n        img = \"fog.png\"\r\n    }\r\n    if (/^6/.test(id)) {\r\n        img = \"snow.png\"\r\n    }\r\n    if ((/^5/.test(id)) || (/^3/.test(id))) {\r\n        img = \"rain.png\"\r\n    }\r\n    if (/^2/.test(id)) {\r\n        img = \"storm.png\"\r\n    }\r\n\r\n    return (\r\n        <div className='boxMainLeftStyle'>\r\n            <div className='frameStyle'>\r\n                <img className={iconClass} src={`weatherIcons/${img}`} alt=\"Couldn't load.\" />\r\n            </div>\r\n            <div className='infoStyle'>\r\n                <div className={smallMainTextClass}>{name}</div>\r\n                <div className={largeMainTextClass}>{Math.round(temp)}°C</div>\r\n                <div className={smallMainTextClass}>{description}</div>\r\n            </div>\r\n        </div >\r\n    )\r\n    //return (<div style={boxLeftStyle}></div>);\r\n}\r\n\r\n\r\n\r\nexport default BoxMain;","import moment from \"moment\";\r\nimport \"../styles/LeftContainer.css\";\r\n\r\nconst BoxDown = ({ sunrise, sunset, feels, wind, humidity, screenSize }) => {\r\n    const sunriseTime = moment.unix(sunrise).format(\"HH:mm\");\r\n    const sunsetTime = moment.unix(sunset).format(\"HH:mm\");\r\n    const boxDownLeftClass = `boxDownLeftStyle${screenSize}`;\r\n\r\n\r\n    return (\r\n        <div className={boxDownLeftClass}>\r\n            <div className='rowStyle'>\r\n                <div>Feels like:</div>\r\n                <div>{Math.round(feels)}°C</div>\r\n            </div>\r\n            <hr className='hrStyle' />\r\n            <div className='rowStyle'>\r\n                <div>Wind:</div>\r\n                <div>{wind} km/h</div>\r\n            </div>\r\n            <hr className='hrStyle' />\r\n            <div className='rowStyle'>\r\n                <div>Humidity:</div>\r\n                <div>{humidity}%</div>\r\n            </div>\r\n            <hr className='hrStyle' />\r\n            <div className='rowStyle'>\r\n                <div>Sunrise:</div>\r\n                <div>{sunriseTime}</div>\r\n            </div>\r\n            <hr className='hrStyle' />\r\n            <div className='rowStyle'>\r\n                <div>Sunset:</div>\r\n                <div>{sunsetTime}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default BoxDown;","import SearchBar from \"./SearchBar\";\r\nimport BoxMain from \"./BoxMain\";\r\nimport BoxDown from \"./BoxDown\";\r\nimport \"../styles/LeftContainer.css\";\r\n\r\nconst LeftContainer = ({ weather, getWeather, screenSize }) => {\r\n    const leftContainerClass = `leftContainerStyle${screenSize}`;\r\n\r\n    return (\r\n        <div className={leftContainerClass}>\r\n            <SearchBar getWeather={getWeather} screenSize={screenSize} />\r\n            <BoxMain\r\n                name={weather.name}\r\n                temp={weather.main.temp}\r\n                description={weather.weather[0].description}\r\n                id={weather.weather[0].id}\r\n                sunrise={weather.sys.sunrise}\r\n                sunset={weather.sys.sunset}\r\n                timezone={weather.timezone}\r\n                screenSize={screenSize}\r\n            />\r\n            <BoxDown\r\n                sunrise={weather.sys.sunrise}\r\n                sunset={weather.sys.sunset}\r\n                feels={weather.main.feels_like}\r\n                wind={weather.wind.speed}\r\n                humidity={weather.main.humidity}\r\n                screenSize={screenSize}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LeftContainer;","import moment from \"moment\";\r\nimport \"../styles/RightContainer.css\"\r\n\r\nconst BoxRight = ({ key, date, minTemp, maxTemp, id, description, screenSize }) => {\r\n    let img = '';\r\n    const day = moment(date).format('ddd');\r\n    const dateFormed = moment(date).format('DD/MMM');\r\n    const smallForecastClass = `smallForecastStyle${screenSize}`;\r\n\r\n    if (/801/.test(id)) {\r\n        img = \"few_clouds_d.png\"\r\n    }\r\n    if ((/802/.test(id)) || (/803/.test(id)) || (/804/.test(id))) {\r\n        img = \"clouds.png\"\r\n    }\r\n    if (/800/.test(id)) {\r\n        img = \"clear_d.png\"\r\n\r\n    }\r\n    if (/^7/.test(id)) {\r\n        img = \"fog.png\"\r\n    }\r\n    if (/^6/.test(id)) {\r\n        img = \"snow.png\"\r\n    }\r\n    if ((/^5/.test(id)) || (/^3/.test(id))) {\r\n        img = \"rain.png\"\r\n    }\r\n    if (/^2/.test(id)) {\r\n        img = \"storm.png\"\r\n    }\r\n\r\n    return (\r\n        <div className='boxRightStyle'>\r\n            <div className='dateStyle'>\r\n                <div className='forecastTextStyle'>{day}</div>\r\n                <div className={smallForecastClass}>{dateFormed}</div>\r\n            </div>\r\n            <div className='forecastDataStyle'>\r\n                <div className='forecastInfoStyle'>\r\n                    <div className='forecastTextStyle'> {Math.round(minTemp)}°C/{Math.round(maxTemp)}°C </div>\r\n                    <div className={smallForecastClass}> {description} </div>\r\n                </div>\r\n                <img className='imgStyle' src={`weatherIcons/${img}`} alt=\"Couldn't load.\" />\r\n            </div>\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default BoxRight\r\n","import BoxRight from \"./BoxRight\";\r\nimport moment from \"moment\";\r\nimport \"../styles/RightContainer.css\"\r\n\r\nconst RightContainer = ({ forecast, screenSize }) => {\r\n    const today = (moment().format('YYYY-MM-DD'));\r\n    const todayPlusOne = (moment().add(1, 'd').format('YYYY-MM-DD'));\r\n    console.log(todayPlusOne);\r\n    const todayPlusTwo = (moment().add(2, 'd').format('YYYY-MM-DD'));\r\n    const todayPlusThree = (moment().add(3, 'd').format('YYYY-MM-DD'));\r\n    const todayPlusFour = (moment().add(4, 'd').format('YYYY-MM-DD'));\r\n    const todayPlusFive = (moment().add(5, 'd').format('YYYY-MM-DD'));\r\n    const regexToday = new RegExp(today);\r\n    const regexTodayPlusOne = new RegExp(todayPlusOne);\r\n    const regexTodayPlusTwo = new RegExp(todayPlusTwo);\r\n    const regexTodayPlusThree = new RegExp(todayPlusThree);\r\n    const regexTodayPlusFour = new RegExp(todayPlusFour);\r\n    const regexTodayPlusFive = new RegExp(todayPlusFive);\r\n    const rightContainerClass = `rightContainerStyle${screenSize}`;\r\n    const f1 = [];\r\n    const f2 = [];\r\n    const f3 = [];\r\n    const f4 = [];\r\n    const f5 = [];\r\n\r\n\r\n    (forecast.list).map((forecast) => (\r\n\r\n        (regexTodayPlusOne.test(forecast.dt_txt)) ? (\r\n            f1.push(forecast.main.temp)\r\n        ) :\r\n            (regexTodayPlusTwo.test(forecast.dt_txt)) ? (\r\n                f2.push(forecast.main.temp)\r\n            ) :\r\n                (regexTodayPlusThree.test(forecast.dt_txt)) ? (\r\n                    f3.push(forecast.main.temp)\r\n                ) :\r\n                    (regexTodayPlusFour.test(forecast.dt_txt)) ? (\r\n                        f4.push(forecast.main.temp)\r\n                    ) :\r\n                        (regexTodayPlusFive.test(forecast.dt_txt)) ? (\r\n                            f5.push(forecast.main.temp)\r\n                        ) : ('')\r\n    ))\r\n\r\n    console.log(f1);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={rightContainerClass}>\r\n            {(forecast.list).map((forecast) => (\r\n                ((regexToday.test(forecast.dt_txt)) || !(/12:00:00$/.test(forecast.dt_txt))) ?\r\n                    ('') :\r\n                    (<BoxRight\r\n                        key={forecast.dt_txt}\r\n                        date={forecast.dt_txt}\r\n                        minTemp={\r\n                            (regexTodayPlusOne.test(forecast.dt_txt)) ? (\r\n                                Math.min(...f1)\r\n                            ) :\r\n                                (regexTodayPlusTwo.test(forecast.dt_txt)) ? (\r\n                                    Math.min(...f2)\r\n                                ) :\r\n                                    (regexTodayPlusThree.test(forecast.dt_txt)) ? (\r\n                                        Math.min(...f3)\r\n                                    ) :\r\n                                        (regexTodayPlusFour.test(forecast.dt_txt)) ? (\r\n                                            Math.min(...f4)\r\n                                        ) :\r\n                                            (regexTodayPlusFive.test(forecast.dt_txt)) ? (\r\n                                                Math.min(...f5)\r\n                                            ) : ('')\r\n                        }\r\n                        maxTemp={\r\n                            (regexTodayPlusOne.test(forecast.dt_txt)) ? (\r\n                                Math.max(...f1)\r\n                            ) :\r\n                                (regexTodayPlusTwo.test(forecast.dt_txt)) ? (\r\n                                    Math.max(...f2)\r\n                                ) :\r\n                                    (regexTodayPlusThree.test(forecast.dt_txt)) ? (\r\n                                        Math.max(...f3)\r\n                                    ) :\r\n                                        (regexTodayPlusFour.test(forecast.dt_txt)) ? (\r\n                                            Math.max(...f4)\r\n                                        ) :\r\n                                            (regexTodayPlusFive.test(forecast.dt_txt)) ? (\r\n                                                Math.max(...f5)\r\n                                            ) : ('')\r\n                        }\r\n                        id={forecast.weather[0].id}\r\n                        description={forecast.weather[0].description}\r\n                        screenSize={screenSize}\r\n                    />)\r\n            ))}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RightContainer;","import { useState, useEffect } from \"react\";\r\nimport throttle from \"lodash.throttle\";\r\n\r\nconst getDeviceConfig = (width) => {\r\n    if (width < 320) {\r\n        return 'xs';\r\n    }\r\n    else if (width >= 320 && width < 720) {\r\n        return 'sm';\r\n    }\r\n    else if (width >= 720 && width < 1100) {\r\n        return 'md';\r\n    }\r\n    else if (width >= 1100) {\r\n        return 'lg';\r\n    }\r\n};\r\n\r\nconst useBreakPoint = () => {\r\n    const [breakPoint, setBreakPoint] = useState(() => getDeviceConfig(window.innerWidth));\r\n\r\n    useEffect(() => {\r\n        const calcInnerWidth = throttle(function () {\r\n            setBreakPoint(getDeviceConfig(window.innerWidth))\r\n        }, 200);\r\n        window.addEventListener('resize', calcInnerWidth);\r\n        return () => window.removeEventListener('resize', calcInnerWidth);\r\n    }, []);\r\n    return breakPoint;\r\n}\r\n\r\nexport default useBreakPoint;","import { useState } from 'react';\r\nimport LeftContainer from './components/LeftContainer';\r\nimport RightContainer from './components/RightContainer';\r\nimport axios from 'axios';\r\nimport SearchBar from './components/SearchBar'\r\nimport './styles/App.css';\r\nimport useBreakPoint from './hooks/useBreakPoints';\r\n\r\nfunction App() {\r\n  const [weather, setWeather] = useState({});\r\n  const [forecast, setForecast] = useState([]);\r\n\r\n\r\n  const screenSize = useBreakPoint();\r\n  const searchContainerClass = `searchContainer${screenSize}`;\r\n\r\n  const getWeather = async (text) => {\r\n    const ApiKey = process.env.REACT_APP_API_KEY\r\n    const urlCurrent = `https://api.openweathermap.org/data/2.5/weather?q=${text}&units=metric&appid=${ApiKey}`;\r\n    const urlForecast = `https://api.openweathermap.org/data/2.5/forecast?q=${text}&units=metric&appid=${ApiKey}`;\r\n    await axios.get(urlCurrent)\r\n      .then((response) => {\r\n        setWeather(response.data);\r\n        return (\r\n          weather\r\n        )\r\n      })\r\n      .catch((error) => {\r\n        if (error.request) {\r\n          alert(\"There's no such city in the database.\");\r\n        }\r\n      })\r\n    await axios.get(urlForecast)\r\n      .then((response) => {\r\n        setForecast(response.data);\r\n        return (\r\n          forecast\r\n        )\r\n      })\r\n    return (\r\n      forecast,\r\n      weather\r\n    )\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {((typeof weather.main != \"undefined\") && (forecast.cod === \"200\")) ?\r\n        (\r\n          <div className='mainStyle'>\r\n            <LeftContainer weather={weather} getWeather={getWeather} screenSize={screenSize} />\r\n            <RightContainer forecast={forecast} screenSize={screenSize} />\r\n          </div>\r\n        ) :\r\n        (\r\n          <div className='blankStyle'>\r\n            <p className='welcomeTextStyle'>Hello, please search for your city.</p>\r\n            <div className={searchContainerClass}><SearchBar getWeather={getWeather} screenSize={screenSize} /></div>\r\n          </div>\r\n        )\r\n      }\r\n    </>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}